name: Deployment
on:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 15
          
      - name: Install Packages
        run: yarn install
      
      - name: Prebuild
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          SKIP_PREFLIGHT_CHECK: ${{ secrets.SKIP_PREFLIGHT_CHECK }}

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          SKIP_PREFLIGHT_CHECK: ${{ secrets.SKIP_PREFLIGHT_CHECK }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.GH_TOKEN }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
# jobs:
#   build:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macOS-latest]
#         node-version: [15.x]
#     steps:
#     - name: Context
#       env:
#         GITHUB_CONTEXT: ${{ toJson(github) }}
#       run: echo "$GITHUB_CONTEXT"
#     - uses: actions/checkout@v1
#       with:
#         fetch-depth: 1
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - name: Install Packages
#       run: yarn install
#     - name: Prebuild
#       env:
#         NODE_ENV: ${{ secrets.NODE_ENV }}
#         SKIP_PREFLIGHT_CHECK: ${{ secrets.SKIP_PREFLIGHT_CHECK }}
#       run: |
#         yarn prebuild
#     - name: Deploy Artifacts
#       env:
#         GH_TOKEN: ${{ secrets.GH_TOKEN }}
#       run: |
#         yarn deploy
#     # - name: Cleanup artifacts
#     #   if: matrix.os != 'windows-latest'
#     #   run: |
#     #     ls -la dist
#     #     mkdir artifacts
#     #     cp -r "dist/(*.exe,*.deb,*.AppImage,*.dmg)" artifacts || true
#     #     ls -la artifacts
#     # - name: Cleanup artifacts Win
#     #   if: matrix.os == 'windows-latest'
#     #   run: |
#     #     mkdir artifacts
#     #     cp -r dist/*.exe artifacts
#     # - name: Upload artifacts
#     #   uses: actions/upload-artifact@v1
#     #   with:
#     #     name: ${{matrix.os}}
#     #     path: artifacts
#     # - name: Release
#     #   uses: softprops/action-gh-release@v1
#     #   if: startsWith(github.ref, 'refs/tags/')
#     #   with:
#     #     files: "artifacts/**"
#     #   env:
#     #     GITHUB_TOKEN: ${{secrets.GH_TOKEN}}

#     - name: Upload artifacts
#       uses: actions/upload-artifact@v1
#       with:
#         name: ${{matrix.os}}
#         path: dist
#     - name: Release
#       uses: softprops/action-gh-release@v1
#       if: startsWith(github.ref, 'refs/tags/')
#       with:
#         files: "dist/**"
#       env:
#         GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
