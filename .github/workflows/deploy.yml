name: Deployment
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        node-version: [15.x]
    steps:
    - name: Context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Packages
      run: yarn install
    - name: Prebuild
      env:
        NODE_ENV: ${{ secrets.NODE_ENV }}
        SKIP_PREFLIGHT_CHECK: ${{ secrets.SKIP_PREFLIGHT_CHECK }}
      run: |
        yarn prebuild
    - name: Deploy Artifacts
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        yarn deploy
    - name: Cleanup artifacts
      if: matrix.os != 'windows-latest'
      run: |
        mkdir artifacts
        cp -r "dist/(*.exe,*.deb,*.AppImage,*.dmg)" artifacts || true
    - name: Cleanup artifacts Win
      if: matrix.os == 'windows-latest'
      run: |
        mkdir artifacts
        cp -r dist/*.exe artifacts
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{matrix.os}}
        path: artifacts
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: "artifacts/**"
      env:
        GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
