name: Deployment
on:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        # os: [macos-latest, ubuntu-latest]
        os: [macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 15

      - name: Setup Xamarin
        uses: maxim-lobanov/setup-xamarin@v1
        with:
          mono-version: 6.6 # specify version in '<major>.<minor>' format
          xamarin-ios-version: 13 # specify version in '<major>' format
          xamarin-mac-version: latest # specify 'latest' keyword to pick up the latest available version
          xamarin-android-version: 10.1.3.7 # specify full version; it is not recomended option because your pipeline can be broken suddenly in future
          xcode-version: latest # set the latest available Xcode 11

      - name: Windows setup WSL
        if: matrix.os == 'windows-latest'
        uses: Vampire/setup-wsl@v1
          
      - name: Install Packages
        env:
          SKIP_PREFLIGHT_CHECK: ${{ secrets.SKIP_PREFLIGHT_CHECK }}
        run: yarn install
      
      - name: Prebuild
        if: matrix.os != 'windows-latest'
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          SKIP_PREFLIGHT_CHECK: ${{ secrets.SKIP_PREFLIGHT_CHECK }}
        run: |
          yarn prebuild
      
      - name: Prebuild - WINDOWS
        if: matrix.os == 'windows-latest'
        shell: wsl-bash_Ubuntu-20.04 {0}
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          SKIP_PREFLIGHT_CHECK: ${{ secrets.SKIP_PREFLIGHT_CHECK }}
        run: |
          yarn prebuild

      - name: Deploy to S3
        if: matrix.os != 'windows-latest'
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SKIP_PREFLIGHT_CHECK: ${{ secrets.SKIP_PREFLIGHT_CHECK }}
        run: |
          yarn publish:s3

      - name: Deploy to S3 - WINDOWS
        if: matrix.os == 'windows-latest'
        shell: wsl-bash_Ubuntu-20.04 {0}
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SKIP_PREFLIGHT_CHECK: ${{ secrets.SKIP_PREFLIGHT_CHECK }}
        run: |
          yarn publish:s3